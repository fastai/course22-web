---
title: "1: Getting started"
---

::: {layout="[30,70]"}

![](../images/bunny_net.png)

In this lesson you're going to hit the ground running -- in the first five minutes you'll see a complete end to end example of training and using a model that's so advanced it was considered at the cutting edge of research capabilities in 2015.<br/><br/>So, let's get started!

:::

## Video

Click the video below to play. Once it's playing, you'll see a little rectangle in the bottom-right---click it to make the video full-screen. Press <kbd>Esc</kbd> to remove full-screen view. Press <kbd>c</kbd> to turn subtitles on/off.

<iframe width="514" height="289" src="https://www.youtube-nocookie.com/embed/8SF_h3xF3cE?modestbranding=1" title="fast.ai lesson 1" frameborder="0" allow="accelerometer; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

This lesson is based partly on [chapter 1](https://github.com/fastai/fastbook/blob/master/01_intro.ipynb) of the [book](https://www.amazon.com/Deep-Learning-Coders-fastai-PyTorch/dp/1492045527).

## How to complete lesson 1

Every lesson includes lots of hands-on exercises for you to try. Most of these are run in interactive notebooks, all of which are available on [Kaggle](../Resources/kaggle.html). If you don't work through the notebooks yourself, you're not going to get nearly as much out of this course---so that means you need to get set up on Kaggle. We have a page to help you get going with Kaggle: [click here](../Resources/kaggle.html) to go there now. Instead of using Kaggle, another great option is [Paperspace Gradient](https://gradient.run/notebooks). If you don't have a Paperspace account yet, sign up with [this link](https://console.paperspace.com/signup?R=lg6rnx) to get $10 credit (and we get a credit too).

Once you've got your Kaggle account set up, you'll need to get familiar with [Jupyter Notebook](https://jupyter.org/), which is the platform we use for most of this course (and which most deep learning researchers and engineers use for their work). Jupyter is the most popular tool for doing data science in Python, for good reason. It is powerful, flexible, and easy to use. We think you will love it! Since the most important thing for learning deep learning is writing code and experimenting, it's important that you have a great platform for experimenting with code. If you haven't used it before, we've provided this to help you get started: [Jupyter Notebook 101](https://www.kaggle.com/code/jhoward/jupyter-notebook-101).

OK, now that you have your Kaggle account and know how to use Jupyter, you're ready to open the notebook for this lesson: [here it is](https://www.kaggle.com/code/jhoward/is-it-a-bird-creating-a-model-from-your-own-data). For every lesson, you can find links to all notebooks used in the *Resources* section of the lesson web page. For instance, for lesson 1, you'll see that section immediately below this one.

As well as watching the video and working through the notebooks, you should also read the relevant chapter(s) of the fast.ai book, [Practical Deep Learning for Coders](https://www.amazon.com/Deep-Learning-Coders-fastai-PyTorch-ebook-dp-B08C2KM7NR/dp/B08C2KM7NR). Each lesson will tell you what chapter you need to read, just below the video. For this lesson, it's chapter 1. There are a few ways to read the book -- you can buy it as a paper book or Kindle ebook, or you can read it for free as a Jupyter notebook. The whole book is written as Jupyter notebooks, so you can also execute all the code in the book yourself. To go to the interactive Jupyter version of any chapter, click [The book](../Resources/book.html) in the left sidebar, where you'll find a list of chapter links. You'll also find links to read-only versions of each chapter there.

## Resources

- [Kaggle](../Resources/kaggle.html) notebooks for this lesson:
  - [Is it a bird? Creating a model from your own data](https://www.kaggle.com/code/jhoward/is-it-a-bird-creating-a-model-from-your-own-data)
  - [Jupyter Notebook 101](https://www.kaggle.com/code/jhoward/jupyter-notebook-101)
- The fastai book:
  - [Published version](https://www.amazon.com/Deep-Learning-Coders-fastai-PyTorch-ebook-dp-B08C2KM7NR/dp/B08C2KM7NR)
  - [Free notebook version](https://github.com/fastai/fastbook)
  - Chapter 1 [notebook](https://github.com/fastai/fastbook/blob/master/01_intro.ipynb)
- Repo containing [all lesson notebooks](https://github.com/fastai/course22)
- [Solutions](https://forums.fast.ai/t/fastbook-chapter-1-questionnaire-solutions-wiki/65647) to chapter 1 questions from the book

## Links

You'll see that fast.ai's way of teaching is very different from what you might be used to, if you did a technical degree at university. Nearly all technical subjects at university are taught "bottom up": start with basic foundations, and gradually work up to complete useful solutions to real world problems. But we go "top down": start with complete useful solutions to real world problems, and gradually work down to the basic foundations. Education experts recommend this approach for more effective learning. For more information, have a look at this article that discusses the fast.ai teaching philosophy: [Providing a Good Education in Deep Learning](https://www.fast.ai/2016/10/08/teaching-philosophy/).

- How to learn - highly recommended books for fast.ai students
  - [Meta Learning](https://radekosmulski.gumroad.com/l/learn_deep_learning)
  - [A Mathematician's Lament](https://www.maa.org/external_archive/devlin/LockhartsLament.pdf) by Paul Lockhart
  - [Making Learning Whole](http://www.pz.harvard.edu/resources/making-learning-whole-how-seven-principles-of-teaching-can-transform-education) by David Perkins
- Jupyter
  - Presentations: [RISE](https://rise.readthedocs.io/en/stable/)
  - Blogging: [fastpages](https://github.com/fastai/fastpages)
  - The notebooks used to create the [fastai library](https://github.com/fastai/fastai/tree/master/nbs)
  - [nbdev](https://nbdev.fast.ai/) - the system we built to create Python libraries using Jupyter
- Fastai: A Layered API for Deep Learning paper: [Information Journal](https://www.mdpi.com/2078-2489/11/2/108) or [arxiv](https://arxiv.org/abs/2002.04688) or [fast.ai](https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/)
- [Dall-e 2 illustrations of Twitter bios](https://twitter.com/nickcammarata/status/1511861061988892675)
- [timm](https://timm.fast.ai): PyTorch Image Models

## If you need help

There are a lot of helpful people, and helpful answers to past questions, on the [fast.ai forums](https://forums.fast.ai/c/p1v5/54). There are special help topics for beginner questions, to ensure that your questions aren’t missed:

- [Help: Setup](https://forums.fast.ai/t/help-setup/95289)
- [Help: Creating a dataset, and using Gradio / Spaces](https://forums.fast.ai/t/help-creating-a-dataset-and-using-gradio-spaces/96281)
- [Help: Using Colab or Kaggle](https://forums.fast.ai/t/help-using-colab-or-kaggle/96280)
- [Help: Python, git, bash, etc](https://forums.fast.ai/t/help-python-git-bash-etc/96282)
- [Help: SGD and Neural Net foundations](https://forums.fast.ai/t/help-sgd-and-neural-net-foundations/96286)
- [Help: Basics of fastai, PyTorch, numpy, etc](https://forums.fast.ai/t/help-basics-of-fastai-pytorch-numpy-etc/96285)
- [Help: Beginner questions that don’t fit elsewhere](https://forums.fast.ai/t/help-beginner-questions-that-dont-fit-elsewhere/96284)
