---
title: "Practical Deep Learning"
image: https://course.fast.ai/www/social.png
description: A free course designed for people with some coding experience, who want to learn how to apply deep learning and machine learning to practical problems.
creator: "@jeremyphoward"
---

:::{.callout-tip}
## New!

We just launched a new >30 hour video course for more experienced students:

[Practical Deep Learning for Coders part 2: *Deep Learning Foundations to Stable Diffusion*](Lessons/part2.qmd)
:::

::: {layout="[30,70]"}

![](images/pencil_sketch.png)

This free course is designed for people (and bunnies!) with some coding experience who want to learn how to apply deep learning and machine learning to practical problems.<br /><br />Deep learning can do all kinds of amazing things. For instance, all illustrations throughout this website are made with deep learning, using [DALL-E 2](https://openai.com/dall-e-2/).

:::

## Welcome!

Practical Deep Learning for Coders 2022 part 1, recorded at the [University of Queensland](https://www.uq.edu.au/), covers topics such as how to:

::: {layout="[30,70]"}

![](images/imagine.png)

- Build and train deep learning models for computer vision, natural language processing, tabular analysis, and collaborative filtering problems
- Create random forests and regression models
- Deploy models
- Use PyTorch, the world’s fastest growing deep learning software, plus popular libraries like fastai and Hugging Face

:::

There are 9 lessons, and each lesson is around 90 minutes long. The course is based on our [5-star rated book](https://www.amazon.com/Deep-Learning-Coders-fastai-PyTorch/dp/1492045527), which is [freely available](Resources/book.qmd) online.

You don’t need any special hardware or software — we’ll show you how to use free resources for both building and deploying models. You don’t need any university math either — we’ll teach you the calculus and linear algebra you need during the course.

:::{.callout-tip}
## Get started

Start watching [lesson 1](Lessons/lesson1.qmd) now!
:::

## Real results

Our videos have been viewed over 6,000,000 times already! Take a look at the [dozens of testimonials](Resources/testimonials.qmd) about our book and course by alumni, top academics, and industry experts.

::: {layout="[70,30]"}

> *'Deep Learning is for everyone' we see in Chapter 1, Section 1 of this book, and while other books may make similar claims, this book delivers on the claim. The authors have extensive knowledge of the field but are able to describe it in a way that is perfectly suited for a reader with experience in programming but not in machine learning. The book shows examples first, and only covers theory in the context of concrete examples. For most people, this is the best way to learn. The book does an impressive job of covering the key applications of deep learning in computer vision, natural language processing, and tabular data processing, but also covers key topics like data ethics that some other books miss. Altogether, this is one of the best sources for a programmer to become proficient in deep learning.*

![](images/people/norvig.jpg)<br>**Peter Norvig**<br>Director of Research, Google

:::

By the end of the second lesson, you will have built and deployed your own deep learning model on data you collect. Many students post their course projects to our forum; you can [view them here](https://forums.fast.ai/t/share-your-work-here/96015). For instance, if there’s an unknown dinosaur in your backyard, maybe you need this [dinosaur classifier](https://notebooksg.jarvislabs.ai/U7mQvWgvra53-YvTogLgJCfNzgJxRJv238Go2bHoAmHBqQFHoOL1ZFeKDG8gYmnO/)!

![](https://user-images.githubusercontent.com/346999/177054810-3e56fcb1-4fb7-418a-b10b-351bab20bf6b.png)

Alumni of our course have gone on to jobs at organizations like **Google Brain**, **OpenAI**, **Adobe**, **Amazon**, and **Tesla**, published research at top conferences such as [NeurIPS](https://en.wikipedia.org/wiki/Conference_on_Neural_Information_Processing_Systems), and created startups using skills they learned here. Petro Cuenca, lead developer of the widely-acclaimed [Camera+](https://camera.plus/) app, after completing the course went on to add deep learning features to his product, which was then [featured by Apple](https://twitter.com/pcuenq/status/1540121042596904963) for its “machine learning magic”.

:::{.callout-tip}
## Get started

Start watching [lesson 1](Lessons/lesson1.qmd) now!
:::

## Your teacher

::: {layout="[70,30]"}

I am Jeremy Howard, your guide on this journey. I lead the development of fastai, the software that you'll be using throughout this course. I have been using and teaching machine learning for around 30 years. I was the top-ranked competitor globally in machine learning competitions on Kaggle (the world's largest machine learning community) two years running. Following this success, I became the President and Chief Scientist of Kaggle. Since first using neural networks 25 years ago, I have led many companies and projects that have machine learning at their core, including founding the first company to focus on deep learning and medicine, Enlitic (chosen by MIT Tech Review as one of the "world's smartest companies"). 

![Jeremy Howard](images/people/jeremy.jpg)

:::

I am the co-founder, along with Dr. Rachel Thomas, of fast.ai, the organization behind this course. At fast.ai we care a lot about teaching. In this course, I start by showing how to use a complete, working, very usable, state-of-the-art deep learning network to solve real-world problems, using simple, expressive tools. And then we gradually dig deeper and deeper into understanding how those tools are made, and how the tools that make those tools are made, and so on… We always teach through examples. We ensure that there is a context and a purpose that you can understand intuitively, rather than starting with algebraic symbol manipulation.

:::{.callout-tip}
## Get started

Start watching [lesson 1](Lessons/lesson1.qmd) now!
:::

## Is this course for me?

Previous fast.ai courses have been studied by hundreds of thousands of students, from all walks of life, from all parts of the world. Many students have told us about how they've become [multiple gold medal winners](https://forums.fast.ai/t/my-first-gold-medal/54237) of [international machine learning competitions](https://towardsdatascience.com/my-3-year-journey-from-zero-python-to-deep-learning-competition-master-6605c188eec7), [received offers](https://forums.fast.ai/t/how-has-your-journey-been-so-far-learners/6480/2) from top companies, and having [research](https://ui.adsabs.harvard.edu/abs/2020EGUGA..2221465A/abstract) [papers](http://www.ieomsociety.org/ieom2020/papers/37.pdf) [published](https://pubs.rsna.org/doi/abs/10.1148/ryai.2019190113?journalCode=ai). For instance, Isaac Dimitrovsky [told us](https://forums.fast.ai/t/thanks-ra2-dream-challenge-win/76875) that he had "*been playing around with ML for a couple of years without really grokking it... [then] went through the fast.ai part 1 course late last year, and it clicked for me*". He went on to achieve first place in the prestigious international [RA2-DREAM Challenge](https://www.synapse.org/#!Synapse:syn20545111/wiki/594083) competition! He developed a [multistage deep learning method](https://www.synapse.org/#!Synapse:syn21478998/wiki/604432) for scoring radiographic hand and foot joint damage in rheumatoid arthritis, taking advantage of the fastai library.

It doesn't matter if you don't come from a technical or a mathematical background (though it's okay if you do too!); we wrote this course to make deep learning accessible to as many people as possible. The only prerequisite is that you know how to code (a year of experience is enough), preferably in Python, and that you have at least followed a high school math course.

Deep learning is a computer technique to extract and transform data–-with use cases ranging from human speech recognition to animal imagery classification–-by using multiple layers of neural networks. A lot of people assume that you need all kinds of hard-to-find stuff to get great results with deep learning, but as you'll see in this course, those people are wrong. Here's a few things you *absolutely don't need* to do world-class deep learning:

| Myth (don't need) | Truth
|---|---|
| Lots of math | Just high school math is sufficient
| Lots of data | We've seen record-breaking results with <50 items of data
| Lots of expensive computers | You can get what you need for state of the art work for free

:::{.callout-tip}
## Get started

Start watching [lesson 1](Lessons/lesson1.qmd) now!
:::

## The software you will be using

In this course, you'll be using [PyTorch](https://pytorch.org/), [fastai](https://docs.fast.ai), Hugging Face [Transformers](https://huggingface.co/docs/transformers/index), and [Gradio](https://gradio.app/).

We've completed hundreds of machine learning projects using dozens of different packages, and many different programming languages. At fast.ai, we have written courses using most of the main deep learning and machine learning packages used today. We spent over a thousand hours testing PyTorch before deciding that we would use it for future courses, software development, and research. PyTorch is now the world's fastest-growing deep learning library and is already used for most research papers at top conferences.

PyTorch works best as a low-level foundation library, providing the basic operations for higher-level functionality. The fastai library one of the most popular libraries for adding this higher-level functionality on top of PyTorch. In this course, as we go deeper and deeper into the foundations of deep learning, we will also go deeper and deeper into the layers of fastai.

Transformers is a popular library focused on natural language processing (NLP) using *transformers models*. In the course you'll see how to create a cutting-edge transfomers model using this library to detect similar concepts in patent applications.

:::{.callout-tip}
## Get started

Start watching [lesson 1](Lessons/lesson1.qmd) now!
:::

## Why deep learning?

Deep learning has power, flexibility, and simplicity. That's why we believe it should be applied across many disciplines. These include the social and physical sciences, the arts, medicine, finance, scientific research, and many more. Here's a list of some of the thousands of tasks in different areas at which deep learning, or methods heavily using deep learning, is now the best in the world:

- **Natural language processing (NLP)** Answering questions; speech recognition; summarizing documents; classifying documents; finding names, dates, etc. in documents; searching for articles mentioning a concept
- **Computer vision** Satellite and drone imagery interpretation (e.g., for disaster resilience); face recognition; image captioning; reading traffic signs; locating pedestrians and vehicles in autonomous vehicles
- **Medicine** Finding anomalies in radiology images, including CT, MRI, and X-ray images; counting features in pathology slides; measuring features in ultrasounds; diagnosing diabetic retinopathy
- **Biology** Folding proteins; classifying proteins; many genomics tasks, such as tumor-normal sequencing and classifying clinically actionable genetic mutations; cell classification; analyzing protein/protein interactions
- **Image generation** Colorizing images; increasing image resolution; removing noise from images; converting images to art in the style of famous artists
- **Recommendation systems** Web search; product recommendations; home page layout
- **Playing games** Chess, Go, most Atari video games, and many real-time strategy games
- **Robotics** Handling objects that are challenging to locate (e.g., transparent, shiny, lacking texture) or hard to pick up
- **Other applications** Financial and logistical forecasting, text to speech, and much more...

:::{.callout-tip}
## Get started

Start watching [lesson 1](Lessons/lesson1.qmd) now!
:::

## What you will learn

After finishing this course you will know:

- How to train models that achieve state-of-the-art results in:
  - Computer vision, including image classification (e.g., classifying pet photos by breed)
  - Natural language processing (NLP), including document classification (e.g., movie review sentiment analysis) and phrase similarity
  - Tabular data with categorical data, continuous data, and mixed data
  - Collaborative filtering (e.g., movie recommendation)
- How to turn your models into web applications, and deploy them
- Why and how deep learning models work, and how to use that knowledge to improve the accuracy, speed, and reliability of your models
- The latest deep learning techniques that really matter in practice
- How to implement stochastic gradient descent and a complete training loop from scratch

Here are some of the techniques covered (don't worry if none of these words mean anything to you yet--you'll learn them all soon): 

- Random forests and gradient boosting
- Affine functions and nonlinearities
- Parameters and activations
- Transfer learning
- Stochastic gradient descent (SGD)
- Data augmentation
- Weight decay
- Image classification
- Entity and word embeddings
- And much more

:::{.callout-tip}
## Get started

Start watching [lesson 1](Lessons/lesson1.qmd) now!
:::

## How do I get started?

To watch the videos, click on the *Lessons* section in the navigation sidebar. The videos are all captioned; while watching the video click the "CC" button to turn them on and off. To get a sense of what's covered in a lesson, you might want to skim through some lesson notes taken by one of our students (thanks Daniel!). Here's his [lesson 7 notes](Lessons/Summaries/lesson7.qmd) and [lesson 8 notes](Lessons/Summaries/lesson8.qmd). You can also access all the videos through [this YouTube playlist](https://www.youtube.com/playlist?list=PLfYUBJiXbdtSvpQjSnJJ_PmDQB_VyT5iU).

Each video is designed to go with various chapters from the book. The entirety of every chapter of the book is available as an interactive Jupyter Notebook. [Jupyter Notebook](https://jupyter.org/) is the most popular tool for doing data science in Python, for good reason. It is powerful, flexible, and easy to use. We think you will love it! Since the most important thing for learning deep learning is writing code and experimenting, it's important that you have a great platform for experimenting with code.

We'll mainly use [Kaggle Notebooks](https://www.kaggle.com/docs/notebooks) and [Paperspace Gradient](https://gradient.run/notebooks) because we've found they work really well for this course, and have good free options. We also will do some parts of the course on your own laptop. (If you don't have a Paperspace account yet, sign up with [this link](https://console.paperspace.com/signup?R=lg6rnx) to get $10 credit -- and we get a credit too.)

We strongly suggest *not* using your own computer for training models in this course, unless you're very experienced with Linux system adminstration and handling GPU drivers, CUDA, and so forth.

If you need help, there's a [wonderful online community](https://forums.fast.ai/c/p1v5/54) ready to help you at forums.fast.ai. Before asking a question on the forums, search carefully to see if your question has been answered before.

:::{.callout-tip}
## Get started

Start watching [lesson 1](Lessons/lesson1.qmd) now!
:::
